{
    "version": "https://jsonfeed.org/version/1",
    "title": "Chen • All posts by \"面试\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2024/06/23/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/",
            "url": "http://example.com/2024/06/23/%E7%AC%AC%E4%BA%8C%E6%AC%A1%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/",
            "title": "第二次面试准备",
            "date_published": "2024-06-23T08:42:22.000Z",
            "content_html": "<h1 id=\"第二次面试准备\"><a class=\"anchor\" href=\"#第二次面试准备\">#</a> 第二次面试准备</h1>\n<p>我的简历，又又又优化了一下</p>\n<p><img data-src=\"image-20240623164731985.png\" alt=\"image-20240623164731985\" /></p>\n<h2 id=\"了解一下公司\"><a class=\"anchor\" href=\"#了解一下公司\">#</a> 了解一下公司</h2>\n<h3 id=\"公司介绍\"><a class=\"anchor\" href=\"#公司介绍\">#</a> 公司介绍</h3>\n<ul>\n<li>云行计划技术布道者</li>\n<li>成立于 2009 年，坐落于杭州湾畔，我们自认为是中国比较优秀的互联网服务提供商。自成立以来，专注于<strong>云计算技术、移动互联应用、B/S 架构系统研发</strong>，为企业客户的互联网应用提供一站式服务。</li>\n</ul>\n<p>（来自 boss）</p>\n<h3 id=\"官网\"><a class=\"anchor\" href=\"#官网\">#</a> 官网</h3>\n<p><img data-src=\"image-20240623165735071.png\" alt=\"image-20240623165735071\" /></p>\n<p>这个地方加载的很慢，如何优化</p>\n<p>&lt;img src=&quot;image-20240623165917959.png&quot; alt=&quot;image-20240623165917959&quot;/&gt;</p>\n<h2 id=\"岗位要求\"><a class=\"anchor\" href=\"#岗位要求\">#</a> 岗位要求</h2>\n<ul>\n<li>扎实的 Java</li>\n<li>熟练使用 Linux</li>\n<li>熟练 Mysql、PostgreSQL</li>\n<li>Spring、Dubbo</li>\n</ul>\n<h2 id=\"自我介绍\"><a class=\"anchor\" href=\"#自我介绍\">#</a> 自我介绍</h2>\n<h2 id=\"项目\"><a class=\"anchor\" href=\"#项目\">#</a> <strong>项目</strong></h2>\n<h2 id=\"基础知识\"><a class=\"anchor\" href=\"#基础知识\">#</a> 基础知识</h2>\n<h3 id=\"redis\"><a class=\"anchor\" href=\"#redis\">#</a> Redis</h3>\n<p>见 面试准备一 以及 Redis 学习记录</p>\n<h3 id=\"linux\"><a class=\"anchor\" href=\"#linux\">#</a> Linux</h3>\n<p>……</p>\n<h3 id=\"java\"><a class=\"anchor\" href=\"#java\">#</a> Java</h3>\n<p>……</p>\n<h3 id=\"spring-postgresql\"><a class=\"anchor\" href=\"#spring-postgresql\">#</a> Spring、<s>PostgreSQL</s></h3>\n<h4 id=\"什么是spring框架spring框架有哪些主要模块\"><a class=\"anchor\" href=\"#什么是spring框架spring框架有哪些主要模块\">#</a> 什么是 Spring 框架？Spring 框架有哪些主要模块？</h4>\n<p>Spring 是一个<strong>轻量级的 JavaEE 框架</strong>，它主要解决企业应用中的复杂性问题。</p>\n<p>Spring 框架有三个核心部分: <strong>lOC 容器、AOP 和数据访问 / 集成层。</strong></p>\n<p>lOC 容器提供了一种对象创建和对象之间关系管理的机制，以实现松散耦合和可扩展性，</p>\n<p>AOP 提供了一种很好的方式来实现横向关注点的处理，如事务管理，安全检查，缓存等。</p>\n<p>数据访问 / 集成层则提供了许多针对不同数据持久化技术的实现，比如 JDBC，ORM 和 NoSQL。</p>\n<p>Spring 框架本身亦是按照设计模式精心打造，这使得我们可以在开发环境中安心的集成 Spring 框架，不必担心 Spring 是如何在后台进行工作的。spring 框架至今已集成了 20 多个模块。这些模块主要被分如下图所示的核心容器、数据访问 / 集成、Web、AOP (面向切面编程)、工具、消息和测试模块</p>\n<p><strong>生态、基石</strong></p>\n<p><img data-src=\"image-20240623192514857.png\" alt=\"image-20240623192514857\" /></p>\n<h4 id=\"spring优点\"><a class=\"anchor\" href=\"#spring优点\">#</a> Spring 优点</h4>\n<ol>\n<li>\n<p><strong>轻量级</strong></p>\n</li>\n<li>\n<p><strong>控制反转（IOC）</strong>、依赖注入</p>\n</li>\n<li>\n<p><strong>切片编程（AOP）</strong></p>\n</li>\n<li>\n<p>容器</p>\n</li>\n<li>\n<p>MVC 框架</p>\n</li>\n<li>\n<p>事务管理</p>\n</li>\n<li>\n<p>异常处理</p>\n</li>\n<li>\n<p><strong>可拓展性</strong></p>\n</li>\n</ol>\n<h4 id=\"谈一下你对于springioc的理解\"><a class=\"anchor\" href=\"#谈一下你对于springioc的理解\">#</a> 谈一下你对于 springIOC 的理解</h4>\n<p>控制反转</p>\n<p>整个 IOC 容器创建的流程和步骤如下：向 bean 工厂中设置一些参数、加载解析 bean 对象、BeanPostProcessor 的注册功能、通过反射的方式讲 BeanDefinition 对象实例化成具体的 bean 对象、bean 对象的初始化过程、生成完整的 bean 对象，通过 getBean 方法可以直接获取、销毁过程</p>\n<h4 id=\"bean的生命周期\"><a class=\"anchor\" href=\"#bean的生命周期\">#</a> bean 的生命周期</h4>\n<p>……</p>\n<h4 id=\"自动装配的各种模式\"><a class=\"anchor\" href=\"#自动装配的各种模式\">#</a> 自动装配的各种模式</h4>\n<ul>\n<li>\n<p><strong>byName</strong></p>\n</li>\n<li>\n<p>byType、constructor</p>\n</li>\n<li>\n<p>autodetect、no</p>\n</li>\n</ul>\n<h4 id=\"beanfactory和applicationcontext有什么区别\"><a class=\"anchor\" href=\"#beanfactory和applicationcontext有什么区别\">#</a> BeanFactory 和 ApplicationContext 有什么区别？</h4>\n<p>加载：BeanFactory 采用的是 ** 延迟加载（lazy-loading）** 的方式，即只有在使用到某个 Bean 时 才会对该 Bean 进行加载和实例化。而 ApplicationContext 则是在容器启动 时，<strong>一次性创建所有的 Bean</strong>。</p>\n<p>创建：BeanFactory 通常以<strong>编程的方式创建</strong>，需要手动编写代码来配置和获取 Bean。而 ApplicationContext 除了支持编程方式创建外，还支持<strong>声明方式创建</strong>，如使用 XML 配置文件或注解 来配置 Bean。</p>\n<p>功能：ApplicationContext 接口作为 BeanFactory 的<strong>派生</strong>，不仅提供了 BeanFactory 所具有的功 能，还提供了更完整的框架功能。</p>\n<h4 id=\"spring-aop的理解\"><a class=\"anchor\" href=\"#spring-aop的理解\">#</a> spring AOP 的理解</h4>\n<p>面向切面编程（AOP）：允许程序员模块化横向业务逻辑，或定义核心部分的功能，例如<strong>日志管理和事</strong> 务管理。</p>\n<p>在 Spring AOP 中，切面通过带有 **@Aspect** 注解的类实现</p>\n<p>通知 (Advice)：通知表示在方法执行前后需要执行的动作。实际上它是 Spring AOP 框架在程序执行过程 中触发的一些代码。有前置通知、后置通知、环绕通知等</p>\n<p>动态代理：代理是将通知应用到目标对象后创建的对象。从客户端的角度看，代理对象和目标对象是一样 的。</p>\n<h4 id=\"spring中用到了哪些设计模式\"><a class=\"anchor\" href=\"#spring中用到了哪些设计模式\">#</a> spring 中用到了哪些设计模式</h4>\n<ul>\n<li>单例模式：bean 默认都是单例的</li>\n<li>原型模式：指定作用域为 prototype</li>\n<li>工厂模式：BeanFactory</li>\n<li>模板方法：postProcessBeanFactory,onRefresh,initPropertyValue</li>\n<li>策略模式：XmlBeanDefinitionReader,PropertiesBeanDefinitionReader</li>\n<li>观察者模式：listener，event，multicast</li>\n<li>适配器模式：Adapter</li>\n<li>装饰者模式：BeanWrapper</li>\n<li>责任链模式：使用 aop 的时候会先生成一个拦截器链</li>\n<li>代理模式：动态代理</li>\n<li>委托者模式：delegate</li>\n</ul>\n<h3 id=\"mysql\"><a class=\"anchor\" href=\"#mysql\">#</a> MySQL</h3>\n<ul>\n<li>索引：b + 树、哈希、位图</li>\n<li>MySQL 优化：索引、查询优化（少子查询、模糊查询、全表查询）、表结构优化、缓存优化（Redis）、硬件优化</li>\n<li>慢查询：查询花费时间很多的日志</li>\n<li>死锁：避免大量查询、给事务加锁、增加悲观锁、设置合理超时时间</li>\n<li>优化大量数据插入：每一次插入的数量变多（合适数量），避免死锁，占用大量系统资源，磁盘空间</li>\n</ul>\n<h3 id=\"dubbo\"><a class=\"anchor\" href=\"#dubbo\">#</a> <s>Dubbo</s></h3>\n<p><s>随着互联网的发展，<strong>网站应用的规模不断扩大，常规的垂直应用架构已无法应对，分布式服务架构以及流动计算架构势在必行</strong>，亟需一个治理系统确保架构有条不紊的演进。</s></p>\n<p><s>Apache Dubbo 最初是为了解决<strong>阿里巴巴内部的微服务架构问题</strong>而设计并开发的，最早在 2008 年，阿里巴巴就将 Dubbo 捐献到开源社区。在 2017 年，Dubbo 被正式捐献 Apache 软件基金会并成为 Apache 顶级项目，开始了一段新的征程。</s></p>\n<h4 id=\"为什么需要-dubbo它能做什么\"><a class=\"anchor\" href=\"#为什么需要-dubbo它能做什么\">#</a> <s>为什么需要 Dubbo，它能做什么？</s></h4>\n<p><s>按照微服务架构的定义，采用它的组织能够很好的提高业务迭代效率与系统稳定性，但前提是要先能保证微服务按照期望的方式运行，要做到这一点需要解决服务拆分与定义、数据通信、地址发现、流量管理、数据一致性、系统容错能力等一系列问题。</s></p>\n<p><s>Dubbo 可以帮助解决如下微服务实践问题：</s></p>\n<ul>\n<li><s><strong>微服务编程范式和工具</strong></s></li>\n</ul>\n<p><s>Dubbo 支持基于 IDL 或语言特定方式的服务定义，提供多种形式的服务调用形式（如同步、异步、流式等）</s></p>\n<ul>\n<li><s><strong>高性能的 RPC 通信</strong></s></li>\n</ul>\n<p><s>Dubbo 帮助解决微服务组件之间的通信问题，提供了基于 HTTP、HTTP/2、TCP 等的多种高性能通信协议实现，并支持序列化协议扩展，在实现上解决网络连接管理、数据传输等基础问题。</s></p>\n<ul>\n<li><s><strong>微服务监控与治理</strong></s></li>\n</ul>\n<p><s>Dubbo 官方提供的服务发现、动态配置、负载均衡、流量路由等基础组件可以很好的帮助解决微服务基础实践的问题。除此之外，您还可以用 Admin 控制台监控微服务状态，通过周边生态完成限流降级、数据一致性、链路追踪等能力。</s></p>\n<ul>\n<li><s><strong>部署在多种环境</strong></s></li>\n</ul>\n<p><s>Dubbo 服务可以直接部署在容器、Kubernetes、Service Mesh 等多种架构下。</s></p>\n<ul>\n<li><s><strong>活跃的社区</strong></s></li>\n</ul>\n<p><s>Dubbo 项目托管在 Apache 社区，有来自国际、国内的活跃贡献者维护着超 10 个生态项目，贡献者包括来自海外、阿里巴巴、工商银行、携程、蚂蚁、腾讯等知名企业技术专家，确保 Dubbo 及时解决项目缺陷、需求及安全漏洞，跟进业界最新技术发展趋势。</s></p>\n<ul>\n<li><s><strong>庞大的用户群体</strong></s></li>\n</ul>\n<p><s>Dubbo3 已在阿里巴巴成功落地，实现了对老版本 HSF2 框架全面升级，成为阿里集团面向云原生时代的统一服务框架底座，庞大的用户群体是 Dubbo 保持稳定性、需求来源、先进性的基础。</s></p>\n<h4 id=\"dubbo-不是什么\"><a class=\"anchor\" href=\"#dubbo-不是什么\">#</a> <s>Dubbo 不是什么？</s></h4>\n<ul>\n<li><s><strong>不是应用开发框架的替代者</strong></s></li>\n</ul>\n<p><s>Dubbo 设计为让开发者以主流的应用开发框架的开发模式工作，它不是各个语言应用开发框架的替代者，如它不是 Spring/Spring Boot 的竞争者，当你使用 Spring 时，Dubbo 可以无缝的与 Spring &amp; Spring Boot 集成在一起。</s></p>\n<ul>\n<li><s><strong>不仅仅只是一款 RPC 框架</strong></s></li>\n</ul>\n<p><s>Dubbo 提供了内置 RPC 通信协议实现，但它不仅仅是一款 RPC 框架。首先，它不绑定某一个具体的 RPC 协议，开发者可以在基于 Dubbo 开发的微服务体系中使用多种通信协议；其次，除了 RPC 通信之外，Dubbo 提供了丰富的服务治理能力与生态。</s></p>\n<ul>\n<li><s><strong>不是 gRPC 协议的替代品</strong></s></li>\n</ul>\n<p><s>Dubbo 支持基于 gRPC 作为底层通信协议，在 Dubbo 模式下使用 gRPC 可以带来更好的开发体验，享有统一的编程模型和更低的服务治理接入成本</s></p>\n<ul>\n<li><s><strong>不只有 Java 语言实现</strong></s></li>\n</ul>\n<p><s>自 Dubbo3 开始，Dubbo 提供了 Java、Golang、Rust、Node.js 等多语言实现，未来会有更多的语言实现。</s></p>\n<h2 id=\"知识拓展\"><a class=\"anchor\" href=\"#知识拓展\">#</a> 知识拓展</h2>\n<h2 id=\"引用\"><a class=\"anchor\" href=\"#引用\">#</a> 引用</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi5kdWJiby5hcGFjaGUub3JnL3poLWNuL292ZXJ2aWV3L3doYXQv\">Dubbo 介绍 | Apache Dubbo</span></p>\n",
            "tags": [
                "面试"
            ]
        },
        {
            "id": "http://example.com/2024/04/12/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/",
            "url": "http://example.com/2024/04/12/%E7%AC%AC%E4%B8%80%E6%AC%A1%E9%9D%A2%E8%AF%95%E5%87%86%E5%A4%87/",
            "title": "第一次面试准备",
            "date_published": "2024-04-12T04:15:51.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>大概三月末的时候，学校有个招聘会，然后我投了几家。刚刚打电话，问我明早有没有时间远程面试</p>\n<p>没多想就答应了下来，这下好了，得回顾一下简历上写的东西了</p>\n<p>对的，很烂</p>\n<p><img data-src=\"image-20240412121818555.png\" alt=\"image-20240412121818555\" /></p>\n<p>想着把 Redis 看一下（其实我还没学完，当时想着做简历就写上去了，而且最近在忙着比赛和打游戏，Java 这方面已经落下很多了）</p>\n<p>也许到时候可以把面试官往我最近比赛的方面引。</p>\n<h1 id=\"可能的面试内容\"><a class=\"anchor\" href=\"#可能的面试内容\">#</a> 可能的面试内容</h1>\n<p>时间紧任务重，能准备的也不是很充分</p>\n<h2 id=\"自我介绍\"><a class=\"anchor\" href=\"#自我介绍\">#</a> <s>自我介绍</s></h2>\n<p>……</p>\n<h2 id=\"redis项目的细节\"><a class=\"anchor\" href=\"#redis项目的细节\">#</a> Redis 项目的细节 *</h2>\n<ul>\n<li>\n<p>五种类型</p>\n<p>字符串、列表、hash、set、zset</p>\n</li>\n<li>\n<p>持久化策略</p>\n<p>…</p>\n</li>\n<li>\n<p>内存淘汰策略</p>\n<p>懒惰性删除 + 定期删除，懒惰性：用的时候才查是否过期。缺点：可能会有数据一直用不到，一直存在在内存。定期删除：定期删，缺点：遍历，时间长，内存压力大</p>\n<p>结合：抽取一部分定期删除 + 懒惰</p>\n</li>\n<li>\n<p>主从、哨兵</p>\n<p>主服务器、从服务器，</p>\n<p>哨兵：监控、提醒、自动故障迁移、统一的配置管理</p>\n</li>\n<li>\n<p>其他见 <em>Redis 学习记录</em></p>\n</li>\n</ul>\n<h2 id=\"spring-boot的相关知识\"><a class=\"anchor\" href=\"#spring-boot的相关知识\">#</a> Spring boot 的相关知识</h2>\n<p><img data-src=\"image-20240412231410321.png\" alt=\"image-20240412231410321\" /></p>\n<p><img data-src=\"image-20240412231458213.png\" alt=\"image-20240412231458213\" /></p>\n<h2 id=\"最近比赛的内容\"><a class=\"anchor\" href=\"#最近比赛的内容\">#</a> 最近比赛的内容</h2>\n<p>见 <em>A25</em></p>\n<h2 id=\"git\"><a class=\"anchor\" href=\"#git\">#</a> Git</h2>\n<p><img data-src=\"image-20240412231950813.png\" alt=\"image-20240412231950813\" /></p>\n<p><img data-src=\"image-20240412232258004.png\" alt=\"image-20240412232258004\" /></p>\n<h1 id=\"面后整理\"><a class=\"anchor\" href=\"#面后整理\">#</a> 面后整理</h1>\n<h2 id=\"自我介绍-2\"><a class=\"anchor\" href=\"#自我介绍-2\">#</a> 自我介绍</h2>\n<p>阿巴阿巴</p>\n<h2 id=\"问我什么项目提升最大redis\"><a class=\"anchor\" href=\"#问我什么项目提升最大redis\">#</a> 问我什么项目提升最大（Redis）</h2>\n<p>我说了 Redis 的那个，介绍一下项目实现，因为没有开视频，我对着昨晚做的 Redis 讲 + 分布式锁</p>\n<p>（懂不懂一天速成 Redis 的含金量 后仰.jpg）</p>\n<h2 id=\"mysql\"><a class=\"anchor\" href=\"#mysql\">#</a> Mysql</h2>\n<p>索引、having、group by</p>\n<h2 id=\"mybatis配置文件\"><a class=\"anchor\" href=\"#mybatis配置文件\">#</a> MyBatis 配置文件</h2>\n<p>Mysql 配置，MyBatis 插件的配置类……</p>\n<h2 id=\"spring-boot\"><a class=\"anchor\" href=\"#spring-boot\">#</a> Spring Boot</h2>\n<p>AOP（可恶，看了的没问，没看的忘了）</p>\n<h2 id=\"java基础\"><a class=\"anchor\" href=\"#java基础\">#</a> Java 基础</h2>\n<p>ArrayList 和 LinkedList 区别：</p>\n<ul>\n<li>ArrayList 基于动态数组实现的非线程安全的集合；LinkedList 基于链表实现的非线程安全的集合。</li>\n<li>对于随机 index 访问的 get 和 set 方法，一般 ArrayList 的速度要优于 LinkedList。因为 ArrayList 直接通过数组下标直接找到元素；LinkedList 要移动指针遍历每个元素直到找到为止。</li>\n</ul>\n<h2 id=\"问我什么课感兴趣\"><a class=\"anchor\" href=\"#问我什么课感兴趣\">#</a> 问我什么课感兴趣</h2>\n<p>我说了 Java + 操作系统 + 数据结构</p>\n<ul>\n<li>\n<p>操作系统</p>\n<p>银行家算法</p>\n</li>\n</ul>\n<h2 id=\"git工具\"><a class=\"anchor\" href=\"#git工具\">#</a> git 工具</h2>\n<p>常用命令</p>\n<h2 id=\"最近比赛的内容-2\"><a class=\"anchor\" href=\"#最近比赛的内容-2\">#</a> 最近比赛的内容</h2>\n<p>因为我时不时提一嘴，我最近在打比赛，然后后面终于问了。<strong>之前在牛客学的精髓，引导面试官占据主导权</strong></p>\n<p>这我可太熟了，然后问我参数的意义</p>\n<h2 id=\"由于涉及到ai问我ai对我们it行业的帮助\"><a class=\"anchor\" href=\"#由于涉及到ai问我ai对我们it行业的帮助\">#</a> 由于涉及到 AI，问我 AI 对我们 IT 行业的帮助</h2>\n<p>弱 AI，基于大数据而不是逻辑，所以只能辅助开发，而非独立开发</p>\n<h2 id=\"结尾\"><a class=\"anchor\" href=\"#结尾\">#</a> 结尾</h2>\n<p>问了一下我的情况</p>\n<h2 id=\"感想\"><a class=\"anchor\" href=\"#感想\">#</a> 感想</h2>\n<p>上次双选会，哥们就拿着之前做好的简历过去投，啥也没准备</p>\n<p>所以这一次算是第一次面试，昨天接到电话后一直在准备（虽然也玩了好些），但确实是半天速成 Redis，把敲代码的过程大部分跳了，然后关注原理，并记录。看完后昨晚看了一遍记录，今天看了一遍。</p>\n<p>然后再对着简历，准备了俩 Spring Boot 高频考点，粗看了一下 Git。早上还很早就醒了，害怕，jpg</p>\n",
            "tags": [
                "面试"
            ]
        }
    ]
}